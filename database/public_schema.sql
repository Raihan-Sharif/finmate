-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.accounts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  name character varying NOT NULL,
  description text,
  type USER-DEFINED NOT NULL DEFAULT 'bank'::account_type,
  bank_name character varying,
  account_number text,
  balance numeric NOT NULL DEFAULT 0,
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  is_active boolean NOT NULL DEFAULT true,
  include_in_total boolean NOT NULL DEFAULT true,
  color character varying NOT NULL DEFAULT '#3B82F6'::character varying,
  icon character varying NOT NULL DEFAULT 'credit-card'::character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  is_default boolean NOT NULL DEFAULT false,
  display_order integer NOT NULL DEFAULT 0,
  credit_limit numeric DEFAULT 0,
  balance_type USER-DEFINED NOT NULL DEFAULT 'debit'::balance_type,
  interest_rate numeric DEFAULT 0,
  minimum_payment numeric DEFAULT 0,
  payment_due_day integer DEFAULT 1,
  statement_closing_day integer DEFAULT 28,
  CONSTRAINT accounts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.admin_audit_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  admin_user_id uuid,
  action USER-DEFINED NOT NULL,
  resource_type character varying NOT NULL,
  resource_id uuid,
  target_user_id uuid,
  old_values jsonb,
  new_values jsonb,
  ip_address inet,
  user_agent text,
  success boolean NOT NULL DEFAULT true,
  error_message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT admin_audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT admin_audit_logs_admin_user_id_fkey FOREIGN KEY (admin_user_id) REFERENCES auth.users(id),
  CONSTRAINT admin_audit_logs_target_user_id_fkey FOREIGN KEY (target_user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.ai_insights (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  title character varying NOT NULL,
  content text NOT NULL,
  confidence_score numeric,
  is_dismissed boolean NOT NULL DEFAULT false,
  metadata jsonb,
  expires_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT ai_insights_pkey PRIMARY KEY (id),
  CONSTRAINT ai_insights_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.budget_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  name character varying NOT NULL,
  description text,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  period USER-DEFINED NOT NULL DEFAULT 'monthly'::budget_period,
  category_ids ARRAY,
  alert_percentage numeric DEFAULT 80.00 CHECK (alert_percentage > 0::numeric AND alert_percentage <= 100::numeric),
  alert_enabled boolean NOT NULL DEFAULT true,
  is_active boolean NOT NULL DEFAULT true,
  is_global boolean NOT NULL DEFAULT false,
  usage_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT budget_templates_pkey PRIMARY KEY (id),
  CONSTRAINT budget_templates_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.budgets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  spent numeric NOT NULL DEFAULT 0 CHECK (spent >= 0::numeric),
  currency character varying NOT NULL DEFAULT 'USD'::character varying,
  period USER-DEFINED NOT NULL DEFAULT 'monthly'::budget_period,
  start_date date NOT NULL,
  end_date date NOT NULL,
  category_ids ARRAY,
  is_active boolean NOT NULL DEFAULT true,
  alert_threshold numeric DEFAULT 80.00 CHECK (alert_threshold > 0::numeric AND alert_threshold <= 100::numeric),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  alert_percentage numeric DEFAULT 80.00 CHECK (alert_percentage > 0::numeric AND alert_percentage <= 100::numeric),
  alert_enabled boolean NOT NULL DEFAULT true,
  CONSTRAINT budgets_pkey PRIMARY KEY (id),
  CONSTRAINT budgets_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  icon character varying NOT NULL DEFAULT 'folder'::character varying,
  color character varying NOT NULL DEFAULT '#6B7280'::character varying,
  type USER-DEFINED NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  user_id uuid,
  is_default boolean NOT NULL DEFAULT false,
  parent_id uuid,
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id)
);
CREATE TABLE public.coupon_usage (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  coupon_id uuid NOT NULL,
  user_id uuid NOT NULL,
  payment_id uuid,
  used_at timestamp with time zone NOT NULL DEFAULT now(),
  discount_amount numeric NOT NULL,
  CONSTRAINT coupon_usage_pkey PRIMARY KEY (id),
  CONSTRAINT coupon_usage_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(user_id)
);
CREATE TABLE public.coupons (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  code character varying NOT NULL UNIQUE,
  description text,
  value numeric NOT NULL,
  minimum_amount numeric DEFAULT 0,
  max_discount_amount numeric,
  max_uses integer,
  max_uses_per_user integer DEFAULT 1,
  used_count integer NOT NULL DEFAULT 0,
  expires_at timestamp with time zone,
  applicable_plans jsonb,
  billing_cycle_restriction character varying,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  scope character varying DEFAULT 'public'::character varying CHECK (scope::text = ANY (ARRAY['public'::character varying, 'private'::character varying, 'user_specific'::character varying]::text[])),
  allowed_users ARRAY,
  CONSTRAINT coupons_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cron_job_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_name character varying NOT NULL,
  status character varying NOT NULL,
  message text,
  metadata jsonb,
  started_at timestamp with time zone NOT NULL,
  completed_at timestamp with time zone,
  duration_seconds integer,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT cron_job_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.emi_payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  loan_id uuid NOT NULL,
  payment_date date NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  principal_amount numeric NOT NULL CHECK (principal_amount > 0::numeric),
  interest_amount numeric NOT NULL CHECK (interest_amount >= 0::numeric),
  outstanding_balance numeric NOT NULL CHECK (outstanding_balance >= 0::numeric),
  is_paid boolean NOT NULL DEFAULT false,
  paid_date timestamp with time zone,
  payment_method character varying,
  transaction_reference character varying,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  transaction_id uuid,
  late_fee numeric DEFAULT 0,
  is_prepayment boolean DEFAULT false,
  CONSTRAINT emi_payments_pkey PRIMARY KEY (id),
  CONSTRAINT emi_payments_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT emi_payments_loan_id_fkey FOREIGN KEY (loan_id) REFERENCES public.loans(id),
  CONSTRAINT emi_payments_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id)
);
CREATE TABLE public.emi_schedules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  loan_id uuid NOT NULL,
  installment_number integer NOT NULL CHECK (installment_number > 0),
  due_date date NOT NULL,
  emi_amount numeric NOT NULL CHECK (emi_amount > 0::numeric),
  principal_amount numeric NOT NULL CHECK (principal_amount > 0::numeric),
  interest_amount numeric NOT NULL CHECK (interest_amount >= 0::numeric),
  outstanding_balance numeric NOT NULL CHECK (outstanding_balance >= 0::numeric),
  is_paid boolean DEFAULT false,
  payment_date date,
  actual_payment_amount numeric,
  late_fee numeric DEFAULT 0,
  payment_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT emi_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT emi_schedules_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT emi_schedules_loan_id_fkey FOREIGN KEY (loan_id) REFERENCES public.loans(id),
  CONSTRAINT emi_schedules_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.emi_payments(id)
);
CREATE TABLE public.emi_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  loan_type USER-DEFINED NOT NULL,
  default_interest_rate numeric,
  default_tenure_months integer,
  is_active boolean DEFAULT true,
  metadata jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT emi_templates_pkey PRIMARY KEY (id),
  CONSTRAINT emi_templates_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.family_groups (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  created_by uuid NOT NULL,
  name character varying NOT NULL DEFAULT 'My Family'::character varying,
  description text,
  max_members integer NOT NULL DEFAULT 4,
  current_members integer NOT NULL DEFAULT 1,
  subscription_plan character varying NOT NULL DEFAULT 'max'::character varying,
  subscription_expires_at timestamp with time zone,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT family_groups_pkey PRIMARY KEY (id),
  CONSTRAINT family_groups_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(user_id)
);
CREATE TABLE public.family_invitations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  family_group_id uuid NOT NULL,
  invited_by uuid NOT NULL,
  email text NOT NULL,
  role USER-DEFINED NOT NULL DEFAULT 'member'::family_role_type,
  status character varying NOT NULL DEFAULT 'pending'::character varying,
  invitation_code character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL DEFAULT (now() + '7 days'::interval),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  accepted_at timestamp with time zone,
  CONSTRAINT family_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT family_invitations_family_group_id_fkey FOREIGN KEY (family_group_id) REFERENCES public.family_groups(id),
  CONSTRAINT family_invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(user_id)
);
CREATE TABLE public.investment_performance_snapshots (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  portfolio_id uuid,
  investment_id uuid,
  snapshot_date date NOT NULL,
  snapshot_type character varying NOT NULL CHECK (snapshot_type::text = ANY (ARRAY['daily'::character varying, 'weekly'::character varying, 'monthly'::character varying, 'quarterly'::character varying, 'yearly'::character varying]::text[])),
  total_invested numeric NOT NULL CHECK (total_invested >= 0::numeric),
  current_value numeric NOT NULL CHECK (current_value >= 0::numeric),
  unrealized_gain_loss numeric NOT NULL,
  realized_gain_loss numeric NOT NULL DEFAULT 0,
  dividend_income numeric NOT NULL DEFAULT 0,
  total_return_percentage numeric NOT NULL,
  annualized_return numeric,
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  total_units numeric,
  metadata jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT investment_performance_snapshots_pkey PRIMARY KEY (id),
  CONSTRAINT investment_performance_snapshots_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT investment_performance_snapshots_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES public.investment_portfolios(id),
  CONSTRAINT investment_performance_snapshots_investment_id_fkey FOREIGN KEY (investment_id) REFERENCES public.investments(id)
);
CREATE TABLE public.investment_portfolios (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  target_amount numeric CHECK (target_amount > 0::numeric),
  target_date date,
  risk_level character varying DEFAULT 'moderate'::character varying,
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  is_active boolean NOT NULL DEFAULT true,
  color character varying NOT NULL DEFAULT '#8B5CF6'::character varying,
  icon character varying NOT NULL DEFAULT 'trending-up'::character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT investment_portfolios_pkey PRIMARY KEY (id),
  CONSTRAINT investment_portfolios_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.investment_price_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  investment_id uuid NOT NULL,
  symbol character varying NOT NULL,
  date date NOT NULL,
  open_price numeric,
  high_price numeric,
  low_price numeric,
  close_price numeric NOT NULL,
  volume bigint DEFAULT 0 CHECK (volume >= 0),
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  source character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT investment_price_history_pkey PRIMARY KEY (id),
  CONSTRAINT investment_price_history_investment_id_fkey FOREIGN KEY (investment_id) REFERENCES public.investments(id)
);
CREATE TABLE public.investment_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  portfolio_id uuid,
  name character varying NOT NULL,
  description text,
  investment_type USER-DEFINED NOT NULL,
  symbol character varying,
  amount_per_investment numeric NOT NULL CHECK (amount_per_investment > 0::numeric),
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  platform character varying,
  account_number character varying,
  frequency USER-DEFINED NOT NULL DEFAULT 'monthly'::investment_frequency,
  interval_value integer NOT NULL DEFAULT 1 CHECK (interval_value > 0),
  start_date date NOT NULL,
  end_date date,
  target_amount numeric CHECK (target_amount IS NULL OR target_amount > 0::numeric),
  auto_execute boolean NOT NULL DEFAULT true,
  market_order boolean NOT NULL DEFAULT true,
  limit_price numeric CHECK (limit_price IS NULL OR limit_price > 0::numeric),
  is_active boolean NOT NULL DEFAULT true,
  last_executed date,
  next_execution date NOT NULL,
  total_executed integer NOT NULL DEFAULT 0,
  total_invested numeric NOT NULL DEFAULT 0 CHECK (total_invested >= 0::numeric),
  tags ARRAY,
  notes text,
  metadata jsonb,
  template_type character varying DEFAULT 'sip'::character varying,
  is_global boolean NOT NULL DEFAULT false,
  usage_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT investment_templates_pkey PRIMARY KEY (id),
  CONSTRAINT investment_templates_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT investment_templates_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES public.investment_portfolios(id)
);
CREATE TABLE public.investment_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  investment_id uuid NOT NULL,
  portfolio_id uuid,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['buy'::character varying, 'sell'::character varying, 'dividend'::character varying, 'bonus'::character varying, 'split'::character varying, 'merge'::character varying, 'rights'::character varying, 'redemption'::character varying]::text[])),
  units numeric NOT NULL CHECK (units > 0::numeric),
  price_per_unit numeric NOT NULL CHECK (price_per_unit > 0::numeric),
  total_amount numeric NOT NULL CHECK (total_amount > 0::numeric),
  brokerage_fee numeric DEFAULT 0,
  tax_amount numeric DEFAULT 0,
  other_charges numeric DEFAULT 0,
  net_amount numeric NOT NULL CHECK (net_amount > 0::numeric),
  transaction_date date NOT NULL,
  settlement_date date,
  transaction_reference character varying,
  exchange_reference character varying,
  platform character varying,
  account_number character varying,
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  notes text,
  metadata jsonb,
  recurring_investment_id uuid,
  is_recurring boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  main_transaction_id uuid,
  CONSTRAINT investment_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT investment_transactions_main_transaction_id_fkey FOREIGN KEY (main_transaction_id) REFERENCES public.transactions(id),
  CONSTRAINT investment_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT investment_transactions_investment_id_fkey FOREIGN KEY (investment_id) REFERENCES public.investments(id),
  CONSTRAINT investment_transactions_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES public.investment_portfolios(id)
);
CREATE TABLE public.investments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  portfolio_id uuid,
  name character varying NOT NULL,
  symbol character varying,
  type USER-DEFINED NOT NULL DEFAULT 'stock'::investment_type,
  status USER-DEFINED NOT NULL DEFAULT 'active'::investment_status,
  total_units numeric NOT NULL DEFAULT 0 CHECK (total_units >= 0::numeric),
  average_cost numeric NOT NULL CHECK (average_cost > 0::numeric),
  current_price numeric NOT NULL CHECK (current_price > 0::numeric),
  total_invested numeric NOT NULL DEFAULT 0 CHECK (total_invested >= 0::numeric),
  current_value numeric NOT NULL DEFAULT 0 CHECK (current_value >= 0::numeric),
  platform character varying,
  account_number character varying,
  folio_number character varying,
  maturity_date date,
  interest_rate numeric CHECK (interest_rate IS NULL OR interest_rate >= 0::numeric AND interest_rate <= 100::numeric),
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  exchange character varying,
  tags ARRAY,
  notes text,
  documents jsonb,
  metadata jsonb,
  gain_loss numeric DEFAULT 0,
  gain_loss_percentage numeric DEFAULT 0,
  dividend_earned numeric DEFAULT 0,
  purchase_date date NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT investments_pkey PRIMARY KEY (id),
  CONSTRAINT investments_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT investments_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES public.investment_portfolios(id)
);
CREATE TABLE public.investments_backup (
  id uuid,
  user_id uuid,
  name character varying,
  type USER-DEFINED,
  symbol character varying,
  units numeric,
  purchase_price numeric,
  current_price numeric,
  currency character varying,
  purchase_date date,
  platform character varying,
  notes text,
  metadata jsonb,
  created_at timestamp with time zone,
  updated_at timestamp with time zone
);
CREATE TABLE public.lending (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  person_name character varying NOT NULL,
  person_contact character varying,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency character varying NOT NULL DEFAULT 'USD'::character varying,
  type USER-DEFINED NOT NULL,
  date date NOT NULL,
  due_date date,
  interest_rate numeric DEFAULT 0 CHECK (interest_rate >= 0::numeric AND interest_rate <= 100::numeric),
  status USER-DEFINED NOT NULL DEFAULT 'pending'::lending_status,
  description text,
  paid_amount numeric NOT NULL DEFAULT 0 CHECK (paid_amount >= 0::numeric),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  account_id uuid,
  category_id uuid,
  reminder_days integer DEFAULT 7,
  contact_info jsonb,
  payment_history jsonb DEFAULT '[]'::jsonb,
  notes text,
  pending_amount numeric CHECK (pending_amount >= 0::numeric),
  subcategory_id uuid,
  auto_debit boolean DEFAULT false,
  next_due_date date,
  CONSTRAINT lending_pkey PRIMARY KEY (id),
  CONSTRAINT lending_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id),
  CONSTRAINT lending_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT lending_subcategory_id_fkey FOREIGN KEY (subcategory_id) REFERENCES public.subcategories(id),
  CONSTRAINT lending_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.lending_payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  lending_id uuid NOT NULL,
  payment_date date NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  payment_method character varying,
  transaction_id uuid,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT lending_payments_pkey PRIMARY KEY (id),
  CONSTRAINT lending_payments_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT lending_payments_lending_id_fkey FOREIGN KEY (lending_id) REFERENCES public.lending(id),
  CONSTRAINT lending_payments_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id)
);
CREATE TABLE public.loans (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  lender character varying NOT NULL,
  principal_amount numeric NOT NULL CHECK (principal_amount > 0::numeric),
  outstanding_amount numeric NOT NULL CHECK (outstanding_amount >= 0::numeric),
  interest_rate numeric NOT NULL CHECK (interest_rate >= 0::numeric AND interest_rate <= 100::numeric),
  emi_amount numeric NOT NULL CHECK (emi_amount > 0::numeric),
  tenure_months integer NOT NULL CHECK (tenure_months > 0),
  start_date date NOT NULL,
  next_due_date date NOT NULL,
  currency character varying NOT NULL DEFAULT 'USD'::character varying,
  type USER-DEFINED NOT NULL DEFAULT 'personal'::loan_type,
  status USER-DEFINED NOT NULL DEFAULT 'active'::loan_status,
  metadata jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  account_id uuid,
  category_id uuid,
  auto_debit boolean DEFAULT false,
  reminder_days integer DEFAULT 3,
  prepayment_amount numeric DEFAULT 0,
  last_payment_date date,
  payment_day integer DEFAULT 1,
  notes text,
  subcategory_id uuid,
  CONSTRAINT loans_pkey PRIMARY KEY (id),
  CONSTRAINT loans_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id),
  CONSTRAINT loans_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT loans_subcategory_id_fkey FOREIGN KEY (subcategory_id) REFERENCES public.subcategories(id),
  CONSTRAINT loans_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  title character varying NOT NULL,
  message text NOT NULL,
  type USER-DEFINED NOT NULL DEFAULT 'info'::notification_type,
  is_read boolean NOT NULL DEFAULT false,
  action_url text,
  metadata jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.payment_methods (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  method_name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  description text,
  account_info jsonb NOT NULL,
  instructions text,
  logo_url text,
  is_active boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT payment_methods_pkey PRIMARY KEY (id)
);
CREATE TABLE public.permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  description text,
  resource character varying NOT NULL,
  action USER-DEFINED NOT NULL,
  is_system boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT permissions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  email text NOT NULL,
  full_name text,
  avatar_url text,
  role_id uuid,
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  timezone text NOT NULL DEFAULT 'UTC'::text,
  theme USER-DEFINED NOT NULL DEFAULT 'system'::theme_type,
  notifications_enabled boolean NOT NULL DEFAULT true,
  ai_insights_enabled boolean NOT NULL DEFAULT true,
  monthly_budget_limit numeric,
  email_verified boolean NOT NULL DEFAULT false,
  phone_number text,
  phone_verified boolean NOT NULL DEFAULT false,
  two_factor_enabled boolean NOT NULL DEFAULT false,
  last_login timestamp with time zone,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  subscription_plan character varying NOT NULL DEFAULT 'free'::character varying,
  subscription_status character varying NOT NULL DEFAULT 'active'::character varying,
  subscription_expires_at timestamp with time zone,
  subscription_started_at timestamp with time zone DEFAULT now(),
  max_accounts integer NOT NULL DEFAULT 3,
  family_group_id uuid,
  family_role USER-DEFINED DEFAULT 'primary'::family_role_type,
  invited_by uuid,
  joined_family_at timestamp with time zone,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT profiles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id),
  CONSTRAINT fk_profiles_family_group FOREIGN KEY (family_group_id) REFERENCES public.family_groups(id),
  CONSTRAINT fk_profiles_invited_by FOREIGN KEY (invited_by) REFERENCES public.profiles(user_id)
);
CREATE TABLE public.recurring_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  transaction_template jsonb NOT NULL,
  frequency character varying NOT NULL,
  interval_value integer NOT NULL DEFAULT 1 CHECK (interval_value > 0),
  start_date date NOT NULL,
  end_date date,
  last_executed date,
  next_execution date NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT recurring_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT recurring_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.role_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  role_id uuid NOT NULL,
  permission_id uuid NOT NULL,
  granted_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT role_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT role_permissions_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id),
  CONSTRAINT role_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permissions(id),
  CONSTRAINT role_permissions_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES auth.users(id)
);
CREATE TABLE public.roles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  description text,
  is_system boolean NOT NULL DEFAULT false,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT roles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.subcategories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  category_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  icon character varying NOT NULL DEFAULT 'folder'::character varying,
  color character varying NOT NULL DEFAULT '#6B7280'::character varying,
  is_active boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subcategories_pkey PRIMARY KEY (id),
  CONSTRAINT subcategories_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.subscription_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  plan_id uuid NOT NULL,
  plan_name character varying NOT NULL,
  action_type character varying NOT NULL,
  amount_paid numeric,
  payment_id uuid,
  effective_date timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscription_history_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_history_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.subscription_plans(id),
  CONSTRAINT subscription_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(user_id)
);
CREATE TABLE public.subscription_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  plan_id uuid,
  billing_cycle USER-DEFINED,
  transaction_id character varying NOT NULL,
  sender_number character varying NOT NULL,
  base_amount numeric NOT NULL,
  discount_amount numeric NOT NULL DEFAULT 0,
  final_amount numeric NOT NULL,
  coupon_id uuid,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::payment_status_type,
  admin_notes text,
  rejection_reason text,
  submitted_at timestamp with time zone,
  verified_at timestamp with time zone,
  approved_at timestamp with time zone,
  rejected_at timestamp with time zone,
  verified_by uuid,
  currency character varying NOT NULL DEFAULT 'BDT'::character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscription_payments_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_payments_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT subscription_payments_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES public.coupons(id),
  CONSTRAINT subscription_payments_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES auth.users(id)
);
CREATE TABLE public.subscription_plans (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  plan_name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  description text,
  price_monthly numeric NOT NULL DEFAULT 0,
  price_yearly numeric NOT NULL DEFAULT 0,
  features jsonb NOT NULL DEFAULT '[]'::jsonb,
  max_accounts integer NOT NULL DEFAULT 3,
  max_family_members integer NOT NULL DEFAULT 1,
  allowed_account_types ARRAY NOT NULL DEFAULT ARRAY['cash'::text, 'bank'::text],
  is_popular boolean DEFAULT false,
  is_active boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscription_plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  type USER-DEFINED NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency character varying NOT NULL DEFAULT 'USD'::character varying,
  description text NOT NULL,
  notes text,
  category_id uuid,
  subcategory_id uuid,
  account_id uuid,
  transfer_to_account_id uuid,
  date date NOT NULL,
  tags ARRAY,
  receipt_url text,
  location text,
  vendor text,
  is_recurring boolean NOT NULL DEFAULT false,
  recurring_pattern jsonb,
  metadata jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  recurring_template_id uuid,
  investment_id uuid,
  investment_transaction_id uuid,
  is_investment_related boolean NOT NULL DEFAULT false,
  investment_action character varying,
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_recurring_template_id_fkey FOREIGN KEY (recurring_template_id) REFERENCES public.recurring_transactions(id),
  CONSTRAINT transactions_investment_id_fkey FOREIGN KEY (investment_id) REFERENCES public.investments(id),
  CONSTRAINT transactions_investment_transaction_id_fkey FOREIGN KEY (investment_transaction_id) REFERENCES public.investment_transactions(id),
  CONSTRAINT transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT transactions_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT transactions_subcategory_id_fkey FOREIGN KEY (subcategory_id) REFERENCES public.subcategories(id),
  CONSTRAINT transactions_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id),
  CONSTRAINT transactions_transfer_to_account_id_fkey FOREIGN KEY (transfer_to_account_id) REFERENCES public.accounts(id)
);
CREATE TABLE public.user_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  permission_id uuid NOT NULL,
  granted boolean NOT NULL DEFAULT true,
  granted_by uuid,
  expires_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT user_permissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permissions(id),
  CONSTRAINT user_permissions_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES auth.users(id)
);
CREATE TABLE public.user_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  session_token text NOT NULL UNIQUE,
  ip_address inet,
  user_agent text,
  device_info jsonb,
  location jsonb,
  is_active boolean NOT NULL DEFAULT true,
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  last_accessed timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT user_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  plan_id uuid,
  billing_cycle USER-DEFINED,
  payment_id uuid,
  status character varying NOT NULL DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'cancelled'::character varying, 'expired'::character varying, 'suspended'::character varying]::text[])),
  end_date timestamp with time zone NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT user_subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_subscriptions_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.subscription_payments(id)
);